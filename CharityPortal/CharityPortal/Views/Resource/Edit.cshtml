@model CharityPortal.Data.Resource

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Resource</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Resource</legend>

        @Html.HiddenFor(model => model.Id)
        
       
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>


            <div class="editor-label">
            @Html.LabelFor(model => model.Organization)
        </div>
        <div class="editor-field">
            @(Html.Telerik().DropDownListFor(model => model.Organization)
            .Name("OrgCombo")

         .BindTo(new SelectList(ViewBag.Organizations, "Id", "Name"))
            .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
    )
          
        </div>

           <div class="editor-label">
           Project
        </div>
        <div class="editor-field">
           @(Html.Telerik().DropDownListFor(model => model.Project)
            .Name("ProjectCombo")
          
            .BindTo(new SelectList(ViewBag.Projects, "Id", "Name"))
            .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
    )
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>
       
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Quantity)
        </div>
        <div class="editor-field">
            @Html.Telerik().NumericTextBoxFor(model => model.Quantity)
            @Html.ValidationMessageFor(model => model.Quantity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QuantityUnits)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QuantityUnits)
            @Html.ValidationMessageFor(model => model.QuantityUnits)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>
       
        <p>
            <input type="submit" value="Save"   class="t-button" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index",  null, new { @class = "t-button" })
</div>
